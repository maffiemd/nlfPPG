}
roundValue(draft[26:27,], 4)
roundValue <- function(df, rd) {
value = 0
for(i in 1:nrow(df)){
if(isOffense(df[i,])) {
print(pickValue[as.numeric(as.character(df[i,]$Selection)) + 1,]$Value)
value = value + pickValue[as.numeric(as.character(df[i,]$Selection)) + 1,]$Value
} else {
value = value
}
}
return(value)
}
roundValue(draft[26:27,], 4)
draft[26:27,]
draftValue[125]$Value
draftValue[125,]$Value
pickValue[125,]$Value
pickValue[136,]$Value
cat(roundValue(draft[26:27,], 4) ==1063)
roundValue <- function(df, rd) {
value = 0
for(i in 1:nrow(df)){
if(isOffense(df[i,])) {
print(pickValue[as.numeric(as.character(df[i,]$Selection)) + 1,]$Value)
value = value + pickValue[as.numeric(as.character(df[i,]$Selection)) + 1,]$Value
} else {
value = value
}
}
return(value)
}
addDraftColumns(shortppg)
addValueColumns <- function(row) {
a <- returnYearValue(draft, row, 7)
for (i in 1:length(a)) {
row[[paste0("selection", i)]] <- a[i]
}
return(row)
}
addDraftColumns <- function(df) {
for (i in 1:25) {
df[[paste0("selection", i)]] <- NA
}
for(i in 1:nrow(df)) {
df[i,] <- addValueColumns(df[i,])
}
return(df)
}
addDraftColumns <- function(df) {
for (i in 1:35) {
df[[paste0("selection", i)]] <- NA
}
for(i in 1:nrow(df)) {
df[i,] <- addValueColumns(df[i,])
}
return(df)
}
addDraftColumns(shortppg)
roundValue <- function(df, rd) {
value = 0
for(i in 1:nrow(df)){
if(isOffense(df[i,])) {
value = value + pickValue[as.numeric(as.character(df[i,]$Selection)) + 1,]$Value
} else {
value = value
}
}
return(value)
}
addDraftColumns(shortppg)
ppg <- read.csv('ppg.csv', header=T)
addDraftColumns(ppg)
# Draft History Construction
draft <- read.csv('draftHistory.csv')
addDraftColumns(ppg)
ppg <- read.csv('ppg.csv', header=T)
addDraftColumns(ppg)
### Analysis
dat <- addDraftColumns(ppg)
plot(dat$PPG~dat$pctOfCap)
summary(lm(dat$PPG~dat$pctOfCap))
head(dat)
## total draft value
rowMeans(dat[5:35])
str(dat)
str(dat)
dtype(dat$selection1)
dat$selection1
head(dat)
addValueColumns(ppg[1,])
a <- addValueColumns(ppg[1,])
a$selection1
as.numeric(a$selection1)
as.numeric(addValueColumns(ppg[1,]))
addDraftColumns <- function(df) {
for (i in 1:35) {
df[[paste0("selection", i)]] <- NA
}
for(i in 1:nrow(df)) {
df[i,] <- as.numeric(addValueColumns(df[i,]))
}
return(df)
}
addValueColumns(ppg[1,])
a <- addValueColumns(ppg[1,])
a$selection1
a <- addDraftColumns(ppg[1,])
a$selection1
a$selection2
a$selection3
addValueColumns <- function(row) {
a <- returnYearValue(draft, row, 7)
for (i in 1:length(a)) {
row[[paste0("selection", i)]] <- as.numeric(a[i])
}
return(row)
}
a <- addValueColumns(ppg[1,])
a$selection1
a$selection2
a$selection3
a$selection4
addDraftColumns <- function(df) {
for (i in 1:35) {
df[[paste0("selection", i)]] <- NA
}
for(i in 1:nrow(df)) {
df[i,] <- as.numeric(addValueColumns(df[i,]))
}
return(df)
}
a <- addDraftColumns(ppg[1,])
addDraftColumns <- function(df) {
for (i in 1:35) {
df[[paste0("selection", i)]] <- NA
}
for(i in 1:nrow(df)) {
df[i,] <- addValueColumns(df[i,])
}
return(df)
}
a <- addDraftColumns(ppg[1,])
a$selection1
a$selection2
a$selection4
### Analysis
dat <- addDraftColumns(ppg)
## total draft value
rowMeans(dat[5:35])
## total draft value
rowMeans(dat[5:35], na.rm = T)
## total draft value
dat$totalDraftCapital <- rowMeans(dat[5:35], na.rm = T)
dat$totalDraftCapital
head(dat)
## total draft value
dat$totalDraftCapital <- rowSums(dat[5:35], na.rm = T)
dat$totalDraftCapital
hist(dat$totalDraftCapital)
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital)) #10% of variance
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+Team)) #10% of variance
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+TEAM)) #10% of variance
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+team)) #10% of variance
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+dat$TEAM)) #10% of variance
dat$pctOfCap <-dat$pctOfCap*100
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+dat$TEAM)) #10% of variance
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+dat$TEAM+dat$YEAR)) #10% of variance
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+dat$TEAM+as.factor(dat$YEAR))) #10% of variance
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital)) #10% of variance
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+dat$YEAR)) #10% of variance
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+as.factor(dat$YEAR))) #10% of variance
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+as.factor(dat$YEAR+dat$TEAM))) #10% of variance
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+as.factor(dat$YEAR+)+dat$TEAM)) #10% of variance
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+as.factor(dat$YEAR)+dat$TEAM)) #10% of variance
returnYearValue <- function(df, row, rounds) {
a = list()
for(i in 0:4){
d <- subsetYearTeam(df, as.character(row$TEAM), row$YEAR -1 -i, rounds)
b <- totalRoundValues(d, rounds)
for(k in b){
a = append(a, k)
}
}
return(a)
}
### Analysis
dat <- addDraftColumns(ppg)
plot(dat$PPG~dat$pctOfCap)
dat$pctOfCap <-dat$pctOfCap*100
## total draft value
dat$totalDraftCapital <- rowSums(dat[5:35], na.rm = T)
hist(dat$totalDraftCapital)
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+as.factor(dat$YEAR)+dat$TEAM)) #10% of variance
addValueColumns <- function(row) {
a <- returnYearValue(draft, row, 7)
for (i in 1:length(a)) {
row[[paste0("selection", i)]] <- as.numeric(a[i])
}
return(row)
}
addValueColumns(ppg[1,])
roundValue <- function(df, rd) {
value = 0
for(i in 1:nrow(df)){
if(isOffense(df[i,])) {
value = value + pickValue[as.numeric(as.character(df[i,]$Selection)),]$Value
} else {
value = value
}
}
return(value)
}
cat(roundValue(draft[26:27,], 4) ==1063)
addValueColumns(ppg[1,])
### Analysis
dat <- addDraftColumns(ppg)
plot(dat$PPG~dat$pctOfCap)
dat$pctOfCap <-dat$pctOfCap*100
## total draft value
dat$totalDraftCapital <- rowSums(dat[5:35], na.rm = T)
hist(dat$totalDraftCapital)
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+as.factor(dat$YEAR)+dat$TEAM)) #10% of variance
0.108*PCTCAP + -0.0001*DRAFTCAP +
## total draft value
dat$totalDraftCapital <- rowSums(dat[5:30], na.rm = T)
hist(dat$totalDraftCapital)
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+as.factor(dat$YEAR)+dat$TEAM)) #10% of variance
dat[5:35]
dat[5:38]
[5:40]
dat[5:40]
## total draft value
dat$totalDraftCapital <- rowSums(dat[5:39], na.rm = T)
hist(dat$totalDraftCapital)
summary(lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+as.factor(dat$YEAR)+dat$TEAM)) #10% of variance
mod <- lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+as.factor(dat$YEAR)+dat$TEAM)#10% of variance
plot(x=predict(mod), y=ppg$PCTOFCAP, ylim = c(0,30), xlim = c(0,30))
plot(x=predict(mod), y=dat$PCTOFCAP, ylim = c(0,30), xlim = c(0,30))
plot(x=predict(mod), y=dat$pctOfCap, ylim = c(0,30), xlim = c(0,30))
abline(lm(dat$pctOfCap~predict(dat)))
abline(lm(dat$pctOfCap~predict(mod)))
plot(x=predict(mod), y=dat$pctOfCap)
abline(lm(dat$pctOfCap~predict(mod)))
mod <- lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital)#10% of variance
plot(x=predict(mod), y=dat$pctOfCap)
abline(lm(dat$pctOfCap~predict(mod)))
summary(mod)
mod <- lm(dat$PPG~dat$pctOfCap)#10% of variance
plot(x=predict(mod), y=dat$pctOfCap)
abline(lm(dat$pctOfCap~predict(mod)))
mod <- lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital)#10% of variance
plot(x=predict(mod), y=dat$pctOfCap)
abline(lm(dat$pctOfCap~predict(mod)))
summary(mod)
plot(mod)
plot(x=predict(mod), y=dat$ppg)
abline(lm(dat$pctOfCap~predict(mod)))
summary(mod)
abline(lm(dat$PPG~predict(mod)))
summary(mod)
mod <- lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital)#10% of variance
plot(x=predict(mod), y=dat$ppg)
plot(x=predict(mod), y=dat$ppg, ylim=(0,30))
plot(x=predict(mod), y=dat$ppg, ylim=c(0,30))
abline(lm(dat$PPG~predict(mod)))
plot(x=predict(mod)~y=dat$ppg, ylim=c(0,30))
plot(predict(mod)~y=dat$ppg, ylim=c(0,30))
plot(predict(mod)~y=dat$ppg)
plot(predict(mod)~y=dat$ppg)
ggplot(dat, aes(x=predict(mod), y= BostonHousing2$medv)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
library(ggplot2)
ggplot(dat, aes(x=predict(mod), y= BostonHousing2$medv)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
mod <- lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+dat$TEAM + dat$YEAR)#10% of variance
library(ggplot2)
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
summary(mod)
## total draft value
dat$totalDraftCapital <- rowSums(dat[13:39], na.rm = T)
hist(dat$totalDraftCapital)
mod <- lm(dat$PPG~dat$pctOfCap+dat$totalDraftCapital+dat$TEAM + dat$YEAR)#10% of variance
library(ggplot2)
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
summary(mod)
ppg <- read.csv('ppg.csv', header=T)
### Analysis
dat <- addDraftColumns(ppg)
plot(dat$PPG~dat$pctOfCap)
dat$pctOfCap <-dat$pctOfCap*100
## total draft value
dat$totalDraftCapital <- rowSums(dat[5:39], na.rm = T)
hist(dat$totalDraftCapital)
mod <- lm(PPG~pctOfCap+totalDraftCapital+TEAM + YEAR, data = dat[1,])#10% of variance
dat[1,]
dat[1:nrow(dat),])
dat[1:nrow(dat),]
mod <- lm(PPG~pctOfCap+totalDraftCapital+TEAM + YEAR, data = dat[2:nrow(dat),])#10% of variance
library(ggplot2)
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
summary(mod)
mod <- lm(PPG~pctOfCap+totalDraftCapital+TEAM + as.factor(dat$YEAR), data = dat[2:nrow(dat),])#10% of variance
mod <- lm(PPG~pctOfCap+totalDraftCapital+TEAM + as.factor(dat[2:nrow(dat)]$YEAR), data = dat[2:nrow(dat),])#10% of variance
mod <- lm(PPG~pctOfCap+totalDraftCapital+TEAM + as.factor(dat[2:nrow(dat),]$YEAR), data = dat[2:nrow(dat),])#10% of variance
library(ggplot2)
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
summary(mod)
dat[1,]
0.108*29.08 + -0.00045*13309 + 0.0716
0.108*29.08 + -0.000045*13309 + 0.0716
17.10+0.108*29.08 + -0.000045*13309 + 0.0716
mod <- lm(PPG~pctOfCap+totalDraftCapital+TEAM, data = dat[2:nrow(dat),])#10% of variance
library(ggplot2)
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
summary(mod)
17.10+0.115*29.08 + 0.0002547*13309 + 0.512
17.10+0.115*29.08 + 0.0002547*13309 + 0.512
mod <- lm(PPG~pctOfCap+totalDraftCapital+TEAM+as.factor(dat[2:nrow(dat),]$YEAR), data = dat[2:nrow(dat),])#10% of variance
library(ggplot2)
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
summary(mod)
17.10+0.098*29.08 + 0.000975*13309 + 0.7167
17.10+0.098*29.08 + 0.0000975*13309 + 0.7167
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
ggplot(dat, aes(x=predict(mod), y= dat[2:nrow(dat),]$PPG)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
ggplot(dat, aes(x=predict(mod), y= dat[2:nrow(dat),]$PPG)) +
geom_point() +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
mod <- lm(PPG~pctOfCap+totalDraftCapital+TEAM+as.factor(dat[2:nrow(dat),]$YEAR), data = dat[2:nrow(dat),])#10% of variance
summary(mod)
17.10+0.098*29.08 + 0.0000975*13309 + 0.7167
psych::descrobe(dat$PPG)
psych::describe(dat$PPG)
predict(mod)
dat[2:nrow(dat),]$PPG
plot(dat$PPG, dat$pctOfCap)
plot(dat$PPG, predict(mod))
mod <- lm(PPG~pctOfCap+totalDraftCapital+TEAM+as.factor(dat$YEAR), data = dat)#10% of variance
library(ggplot2)
ggplot(dat, aes(x=predict(mod), y= dat[2:nrow(dat),]$PPG)) +
geom_point() +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
plot(dat$PPG, predict(mod))
17.10+0.098*29.08 + 0.0000975*13309 + 0.7167
plot(dat$PPG, predict(mod), label=dat[index])
plot(dat$PPG, predict(mod), label=dat)
plot(dat$PPG, predict(mod), label=dat$TEAM)
?plot
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(dat$PPG~predict(mod))
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(klm(dat$PPG~predict(mod)))
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(lm(dat$PPG~predict(mod)))
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed")
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
geom_text(aes(label = ifelse(row_number() == 1, "First Row", "")), hjust = -0.1, vjust = 1)
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values') +
geom_text(aes(label = ifelse(row_number() == 1, "First Row", "")), hjust = -0.1, vjust = 1)
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values') +
geom_text(aes(label = as.character(row_number())), vjust = -0.5)
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')
library(dplyr)
ggplot(dat, aes(x=predict(mod), y= dat$PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values') +
geom_text(aes(label = as.character(row_number())), vjust = -0.5)
dat <- dat %>%
mutate(row_index = row_number())
# Create the ggplot with points and the 1:1 line
ggplot(dat, aes(x = predict(mod), y = PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x = 'Predicted Values', y = 'Actual Values', title = 'Predicted vs. Actual Values') +
# Annotate the points with their index
geom_text(aes(label = as.character(row_index)), vjust = -0.5)
# Create the ggplot with points and the 1:1 line
ggplot(dat, aes(x = predict(mod), y = PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x = 'Predicted Values', y = 'Actual Values', title = 'Predicted vs. Actual Values') +
# Annotate the points with their index for "Pittsburgh Steelers"
geom_text(data = filter(dat, TEAM == "Pittsburgh Steelers"),
aes(label = as.character(row_index)), vjust = -0.5)
dat <- dat %>%
mutate(row_index = row_number())
# Create the ggplot with points and the 1:1 line
ggplot(dat, aes(x = predict(mod), y = PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x = 'Predicted Values', y = 'Actual Values', title = 'Predicted vs. Actual Values') +
# Annotate the points with their index for "Pittsburgh Steelers"
geom_text(data = filter(dat, TEAM == "Pittsburgh Steelers"),
aes(label = as.character(row_index)), vjust = -0.5)
# Create a new column for the row index
dat <- dat %>%
mutate(row_index = row_number())
# Create the ggplot with points and the 1:1 line
ggplot(dat, aes(x = predict(mod), y = PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x = 'Predicted Values', y = 'Actual Values', title = 'Predicted vs. Actual Values') +
# Annotate the points with their index for "Pittsburgh Steelers"
geom_text(data = filter(dat, TEAM == "Pittsburgh Steelers"),
aes(label = as.character(row_index)), vjust = -0.5)
dat$TEAM == "Pittsburgh Steelers"
# Filter the data for "Pittsburgh Steelers" and create a new column for the row index
filtered_dat <- dat %>%
filter(TEAM == "Pittsburgh Steelers") %>%
mutate(row_index = row_number())
# Create the ggplot with points and the 1:1 line
ggplot(filtered_dat, aes(x = predict(mod), y = PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x = 'Predicted Values', y = 'Actual Values', title = 'Predicted vs. Actual Values') +
# Annotate the points with their index for "Pittsburgh Steelers"
geom_text(aes(label = as.character(row_index)), vjust = -0.5)
# Filter the data for "Pittsburgh Steelers"
filtered_dat <- dat %>%
filter(TEAM == "Pittsburgh Steelers")
# Create a new column for the row index in the filtered data
filtered_dat <- filtered_dat %>%
mutate(row_index = row_number())
# Create the ggplot with points and the 1:1 line
ggplot(filtered_dat, aes(x = predict(mod), y = PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x = 'Predicted Values', y = 'Actual Values', title = 'Predicted vs. Actual Values') +
# Annotate the points with their index for "Pittsburgh Steelers"
geom_text(aes(label = as.character(row_index)), vjust = -0.5)
# Filter the data for "Pittsburgh Steelers" and create a new column for the row index
filtered_dat <- dat %>%
filter(TEAM == "Pittsburgh Steelers") %>%
mutate(row_index = 1:n())
# Create the ggplot with points and the 1:1 line
ggplot(filtered_dat, aes(x = predict(mod), y = PPG, label = as.character(row_index))) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x = 'Predicted Values', y = 'Actual Values', title = 'Predicted vs. Actual Values') +
# Annotate the points with their index for "Pittsburgh Steelers"
geom_text(vjust = -0.5)
summary(mod)
# Create the ggplot with points and the 1:1 line
ggplot(filtered_dat, aes(x = predict(mod), y = PPG, label = as.character(row_index))) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x = 'Predicted Values', y = 'Actual Values', title = 'Predicted vs. Actual Values')
# Create the ggplot with points and the 1:1 line
ggplot(filtered_dat, aes(x = predict(mod), y = PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x = 'Predicted Values', y = 'Actual Values', title = 'Predicted vs. Actual Values')
# Create the ggplot with points and the 1:1 line
ggplot(dat, aes(x = predict(mod), y = PPG)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
labs(x = 'Predicted Values', y = 'Actual Values', title = 'Predicted vs. Actual Values')
